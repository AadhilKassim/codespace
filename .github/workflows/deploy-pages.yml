name: Build and deploy GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      GH_PAGES_PAT: ${{ secrets.GH_PAGES_PAT }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build (Parcel) with repo public URL
        env:
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: |
          npm run build -- --public-url "https://${OWNER}.github.io/${REPO}"

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
      
      # Fallback deployment using push to gh-pages branch via peaceiris.
      # This step will run only if the Pages actions route is not desired or fails.
      - name: Setup git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Deploy to gh-pages using PAT (if provided)
        if: env.GH_PAGES_PAT != ''
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAGES_PAT }}
          publish_dir: ./dist

      - name: Deploy to gh-pages using GITHUB_TOKEN (may be blocked by branch protection)
        if: env.GH_PAGES_PAT == ''
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  diagnostics:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List referenced actions from workflows
        run: |
          echo "Searching .github/workflows for 'uses:' entries"
          mkdir -p /tmp/actions-list
          grep -hR "uses:" .github/workflows || true
          grep -hR "uses:" .github/workflows | sed -E 's/.*uses: *([^ ]+).*/\1/' | sort -u > /tmp/actions-list/actions.txt || true
          echo "Found actions:"
          cat /tmp/actions-list/actions.txt || true

      - name: Check remote action metadata for deprecated upload-artifact@v3
        run: |
          set -euo pipefail
          while read -r action; do
            [ -z "$action" ] && continue
            echo "\n--- Checking $action ---"
            repo="${action%@*}"
            ref="${action#*@}"
            # Try common metadata filenames
            for meta in action.yml action.yaml; do
              url="https://raw.githubusercontent.com/${repo}/${ref}/${meta}"
              echo "Trying $url"
              if curl -sSf "$url" -o /tmp/remote-action.yml; then
                if grep -q "actions/upload-artifact@v3" /tmp/remote-action.yml; then
                  echo "DEPRECATED: Found actions/upload-artifact@v3 in $url"
                else
                  echo "OK: no direct reference to upload-artifact@v3 in $url"
                fi
              else
                echo "Could not fetch $url (may not exist)"
              fi
            done
          done < /tmp/actions-list/actions.txt || true
